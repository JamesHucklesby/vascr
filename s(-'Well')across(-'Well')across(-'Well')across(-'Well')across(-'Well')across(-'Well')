warning: in the working copy of 'man/vascr_shiny.Rd', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'tests/testthat/_snaps/vascr_naming.md', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'tests/testthat/_snaps/vascr_stretch_shift.md', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/man/glue.Rd b/man/glue.Rd[m
[1mdeleted file mode 100644[m
[1mindex 05bb190..0000000[m
[1m--- a/man/glue.Rd[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-% Generated by roxygen2: do not edit by hand[m
[31m-% Please edit documentation in R/vascr2-package.R[m
[31m-\name{glue}[m
[31m-\alias{glue}[m
[31m-\title{re-export glue}[m
[31m-\description{[m
[31m-re-export glue[m
[31m-}[m
[1mdiff --git a/man/pipe.Rd b/man/pipe.Rd[m
[1mdeleted file mode 100644[m
[1mindex ce368bc..0000000[m
[1m--- a/man/pipe.Rd[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-% Generated by roxygen2: do not edit by hand[m
[31m-% Please edit documentation in R/vascr2-package.R[m
[31m-\name{\%>\%}[m
[31m-\alias{\%>\%}[m
[31m-\title{re-export magrittr pipe operator}[m
[31m-\description{[m
[31m-re-export magrittr pipe operator[m
[31m-}[m
[1mdiff --git a/man/tribble.Rd b/man/tribble.Rd[m
[1mdeleted file mode 100644[m
[1mindex 5c0a219..0000000[m
[1m--- a/man/tribble.Rd[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-% Generated by roxygen2: do not edit by hand[m
[31m-% Please edit documentation in R/vascr2-package.R[m
[31m-\name{tribble}[m
[31m-\alias{tribble}[m
[31m-\title{re-export tribble}[m
[31m-\description{[m
[31m-re-export tribble[m
[31m-}[m
[1mdiff --git a/man/vascr-package.Rd b/man/vascr-package.Rd[m
[1mindex 535a1ba..517ab59 100644[m
[1m--- a/man/vascr-package.Rd[m
[1m+++ b/man/vascr-package.Rd[m
[36m@@ -6,7 +6,7 @@[m
 \alias{vascr-package}[m
 \title{vascr: Process Biological Impedance Sensing Data}[m
 \description{[m
[31m-Process complex impedance sensing datasets, including those generated by ECIS, xCELLigence and cellZscope instruments. Data can be imported to a standardised tidy format and then plotted. Support for conducting and plotting the outputs of ANOVA (with appropriate tests of statistical assumptions) and cross-correlation analysis. For data processed using this pacakge see Hucklesby et al. (2020) \doi{10.3390/bios11050159}.[m
[32m+[m[32mProcess complex impedance sensing datasets, including those generated by ECIS, xCELLigence and cellZscope instruments. Data can be imported to a standardised tidy format and then plotted. Support for conducting and plotting the outputs of ANOVA (with appropriate tests of statistical assumptions) and cross-correlation analysis. For data processed using this package see Hucklesby et al. (2020) \doi{10.3390/bios11050159}.[m
 }[m
 \seealso{[m
 Useful links:[m
[1mdiff --git a/man/vascr_combine.Rd b/man/vascr_combine.Rd[m
[1mindex eb13122..3b2e291 100644[m
[1m--- a/man/vascr_combine.Rd[m
[1m+++ b/man/vascr_combine.Rd[m
[36m@@ -18,15 +18,13 @@[m [mA single data frame containing all the data imported, automatically incremented[m
 This function will combine ECIS data sets end to end. Preferential to use over a simple rbind command as it runs additional checks to ensure that data points are correctly generated[m
 }[m
 \examples{[m
[32m+[m[32m#Make three fake experiments worth of data[m
[32m+[m[32mexperiment1.df = vascr_subset(growth.df, experiment = "1")[m
[32m+[m[32mexperiment2.df = vascr_subset(growth.df, experiment = "2")[m
[32m+[m[32mexperiment3.df = vascr_subset(growth.df, experiment = "3")[m
 [m
[31m-#Make two fake experiments worth of data[m
[31m-[m
[31m-#experiment1.df = vascr_subset(growth.df, experiment = "1")[m
[31m-#experiment2.df = vascr_subset(growth.df, experiment = "2")[m
[31m-#experiment3.df = vascr_subset(growth.df, experiment = "3")[m
[31m-[m
[31m-#data = vascr_combine(experiment1.df, experiment2.df, experiment3.df)[m
[31m-#head(data)[m
[32m+[m[32mdata = vascr_combine(experiment1.df, experiment2.df, experiment3.df)[m
[32m+[m[32mhead(data)[m
 [m
 [m
 }[m
[1mdiff --git a/man/vascr_find_level.Rd b/man/vascr_find_level.Rd[m
[1mdeleted file mode 100644[m
[1mindex 1bc1a97..0000000[m
[1m--- a/man/vascr_find_level.Rd[m
[1m+++ /dev/null[m
[36m@@ -1,22 +0,0 @@[m
[31m-% Generated by roxygen2: do not edit by hand[m
[31m-% Please edit documentation in R/vascr_find.R[m
[31m-\name{vascr_find_level}[m
[31m-\alias{vascr_find_level}[m
[31m-\title{Check the level of a vascr data frame}[m
[31m-\usage{[m
[31m-vascr_find_level(data)[m
[31m-}[m
[31m-\arguments{[m
[31m-\item{data}{The data frame to analyse}[m
[31m-}[m
[31m-\value{[m
[31m-The level of the dataset analysed[m
[31m-}[m
[31m-\description{[m
[31m-Check the level of a vascr data frame[m
[31m-}[m
[31m-\examples{[m
[31m-#vascr_find_level(growth.df)[m
[31m-#vascr_find_level(vascr_summarise(growth.df, level = "experiments"))[m
[31m-#vascr_find_level(vascr_summarise(growth.df, level = "summary"))[m
[31m-}[m
[1mdiff --git a/man/vascr_import.Rd b/man/vascr_import.Rd[m
[1mindex fc8e1c8..9c76375 100644[m
[1m--- a/man/vascr_import.Rd[m
[1m+++ b/man/vascr_import.Rd[m
[36m@@ -4,7 +4,13 @@[m
 \alias{vascr_import}[m
 \title{Import an impedance datafile to vascr}[m
 \usage{[m
[31m-vascr_import(instrument = NULL, raw = NULL, modeled = NULL, experiment = NULL)[m
[32m+[m[32mvascr_import([m
[32m+[m[32m  instrument = NULL,[m
[32m+[m[32m  raw = NULL,[m
[32m+[m[32m  modeled = NULL,[m
[32m+[m[32m  experiment = NULL,[m
[32m+[m[32m  shear = FALSE[m
[32m+[m[32m)[m
 }[m
 \arguments{[m
 \item{instrument}{Instrument to import from, either ECIS, xCELLigence or cellZscope}[m
[36m@@ -22,7 +28,7 @@[m [mA vascr dataset for subsequent analysis[m
 Import an impedance datafile to vascr[m
 }[m
 \examples{[m
[31m-\dontrun{[m
[32m+[m[32m\donttest{[m
 [m
 # ECIS[m
 raw = system.file('extdata/instruments/ecis_TimeResample.abp', package = 'vascr')[m
[36m@@ -38,5 +44,10 @@[m [mvascr_import("xCELLigence", raw, experiment = "xCELLigence")[m
 model = system.file("extdata/instruments/zscopemodel.txt", package = "vascr")[m
 raw = system.file("extdata/instruments/zscoperaw.txt", package = "vascr")[m
 vascr_import("cellzscope", raw, model, "cellZscope")[m
[32m+[m
[32m+[m[32m#' # ScioSpec[m
[32m+[m[32mraw = system.file("extdata/instruments/ScioSpec", package = "vascr")[m
[32m+[m[32mvascr_import("sciospec", raw, model, "ScioSpec")[m
[32m+[m
 }[m
 }[m
[1mdiff --git a/man/vascr_resample_time.Rd b/man/vascr_resample_time.Rd[m
[1mindex 8184c5e..b855810 100644[m
[1m--- a/man/vascr_resample_time.Rd[m
[1m+++ b/man/vascr_resample_time.Rd[m
[36m@@ -38,10 +38,10 @@[m [msummarising and plotting the data. This function interpolates these data to allo[m
 these downstream functions to happen.[m
 }[m
 \examples{[m
[32m+[m[32m# Automatically re sample, mimicking the input data as closely as possible[m
 vascr_resample_time(growth.df)[m
 [m
[31m-vascr_resample_time(growth.df, t_start = 5, t_end = 20, rate = 5)[m
[31m-[m
[31m-vascr_resample_time(growth.df, t_start = 5, t_end = 20, force = c(1,2,3))[m
[32m+[m[32m# Fully controlled resample with advanced options[m
[32m+[m[32mvascr_resample_time(growth.df, t_start = 5, t_end = 20, rate = 5, force = c(1,2,3))[m
 [m
 }[m
[1mdiff --git a/man/vascr_shiny.Rd b/man/vascr_shiny.Rd[m
[1mindex 27fb68a..e81ce1a 100644[m
[1m--- a/man/vascr_shiny.Rd[m
[1m+++ b/man/vascr_shiny.Rd[m
[36m@@ -15,9 +15,3 @@[m [mA shinyApp to work with vascr data[m
 \description{[m
 Launch the vascr UI[m
 }[m
[31m-\examples{[m
[31m-\dontrun{[m
[31m-vascr_shiny()[m
[31m-}[m
[31m-[m
[31m-}[m
[1mdiff --git a/man/vascr_summarise.Rd b/man/vascr_summarise.Rd[m
[1mindex 8601017..319d29e 100644[m
[1m--- a/man/vascr_summarise.Rd[m
[1m+++ b/man/vascr_summarise.Rd[m
[36m@@ -23,5 +23,4 @@[m [mrbgrowth.df = vascr_subset(growth.df, unit = "Rb")[m
 vascr_summarise(rbgrowth.df, level = "summary")[m
 vascr_summarise(rbgrowth.df, level = "experiment")[m
 vascr_summarise(rbgrowth.df, level = "wells")[m
[31m-[m
 }[m
[1mdiff --git a/tests/testthat/Rplots.pdf b/tests/testthat/Rplots.pdf[m
[1mindex e35ee24..725f8bb 100644[m
[1m--- a/tests/testthat/Rplots.pdf[m
[1m+++ b/tests/testthat/Rplots.pdf[m
[36m@@ -99,9 +99,9 @@[m [my  2.0[m
 [m
    1.0[m
 [m
[31m-        1.0  1.5  2.0      2.5  3.0[m
[32m+[m[32m        1.0  1.5  2.0        2.5  3.0[m
 [m
[31m-                  ohmÂ½ cm[m
[32m+[m[32m                  ohm1/2 cm[m
    3.0[m
 [m
    2.5[m
[1mdiff --git a/tests/testthat/_snaps/vascr_anova/dunnett-1.svg b/tests/testthat/_snaps/vascr_anova/dunnett-1.svg[m
[1mdeleted file mode 100644[m
[1mindex 2dfa1e7..0000000[m
[1m--- a/tests/testthat/_snaps/vascr_anova/dunnett-1.svg[m
[1m+++ /dev/null[m
[36m@@ -1,152 +0,0 @@[m
[31m-<?xml version='1.0' encoding='UTF-8' ?>[m
[31m-<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' class='svglite' data-engine-version='2.0' width='720.00pt' height='576.00pt' viewBox='0 0 720.00 576.00'>[m
[31m-<defs>[m
[31m-  <style type='text/css'><![CDATA[[m
[31m-    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {[m
[31m-      fill: none;[m
[31m-      stroke: #000000;[m
[31m-      stroke-linecap: round;[m
[31m-      stroke-linejoin: round;[m
[31m-      stroke-miterlimit: 10.00;[m
[31m-    }[m
[31m-  ]]></style>[m
[31m-</defs>[m
[31m-<rect width='100%' height='100%' style='stroke: none; fill: #FFFFFF;'/>[m
[31m-<defs>[m
[31m-  <clipPath id='cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA='>[m
[31m-    <rect x='0.00' y='0.00' width='720.00' height='576.00' />[m
[31m-  </clipPath>[m
[31m-</defs>[m
[31m-<g clip-path='url(#cpMC4wMHw3MjAuMDB8MC4wMHw1NzYuMDA=)'>[m
[31m-<rect x='0.00' y='0.00' width='720.00' height='576.00' style='stroke-width: 1.07; stroke: #FFFFFF; fill: #FFFFFF;' />[m
[31m-</g>[m
[31m-<defs>[m
[31m-  <clipPath id='cpMzcuNjl8NTQ1LjgzfDIyLjc4fDU0NS4xMQ=='>[m
[31m-    <rect x='37.69' y='22.78' width='508.14' height='522.33' />[m
[31m-  </clipPath>[m
[31m-</defs>[m
[31m-<g clip-path='url(#cpMzcuNjl8NTQ1LjgzfDIyLjc4fDU0NS4xMQ==)'>[m
[31m-<rect x='37.69' y='22.78' width='508.14' height='522.33' style='stroke-width: 1.07; stroke: none; fill: #EBEBEB;' />[m
[31m-<polyline points='37.69,497.72 545.83,497.72 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,399.57 545.83,399.57 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,301.42 545.83,301.42 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,203.28 545.83,203.28 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,105.13 545.83,105.13 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='109.41,545.11 109.41,22.78 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='230.98,545.11 230.98,22.78 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='352.54,545.11 352.54,22.78 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='474.10,545.11 474.10,22.78 ' style='stroke-width: 0.53; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,448.65 545.83,448.65 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,350.50 545.83,350.50 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,252.35 545.83,252.35 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,154.20 545.83,154.20 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='37.69,56.05 545.83,56.05 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='48.63,545.11 48.63,22.78 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='170.19,545.11 170.19,22.78 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='291.76,545.11 291.76,22.78 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='413.32,545.11 413.32,22.78 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='534.89,545.11 534.89,22.78 ' style='stroke-width: 1.07; stroke: #FFFFFF; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,502.45 72.94,502.99 85.10,503.68 97.25,504.32 109.41,504.91 121.57,505.48 133.72,506.05 145.88,506.70 158.04,507.34 170.19,507.92 182.35,508.45 194.51,508.99 206.66,509.63 218.82,510.17 230.98,510.60 243.13,511.00 255.29,511.49 267.44,511.98 279.60,512.42 291.76,512.75 303.91,513.15 316.07,512.93 328.23,513.37 340.38,513.72 352.54,514.03 364.70,514.41 376.85,514.87 389.01,515.09 401.17,515.35 413.32,515.70 425.48,516.06 437.63,516.48 449.79,516.88 461.95,517.20 474.10,517.45 486.26,517.82 498.42,518.26 510.57,518.60 522.73,518.84 ' style='stroke-width: 1.07; stroke: #F8766D; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,485.33 72.94,477.27 85.10,467.48 97.25,457.25 109.41,448.97 121.57,440.32 133.72,432.34 145.88,422.12 158.04,412.21 170.19,401.05 182.35,387.83 194.51,374.57 206.66,355.70 218.82,336.70 230.98,313.31 243.13,290.51 255.29,267.93 267.44,243.51 279.60,221.23 291.76,199.78 303.91,193.09 316.07,173.61 328.23,169.20 340.38,169.67 352.54,172.55 364.70,182.78 376.85,190.95 389.01,204.34 401.17,213.55 413.32,221.54 425.48,230.34 437.63,241.63 449.79,252.07 461.95,262.17 474.10,270.44 486.26,273.93 498.42,281.50 510.57,290.25 522.73,298.25 ' style='stroke-width: 1.07; stroke: #CD9600; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,476.16 72.94,463.64 85.10,448.96 97.25,435.29 109.41,421.48 121.57,411.13 133.72,399.81 145.88,386.34 158.04,371.37 170.19,352.96 182.35,335.36 194.51,312.01 206.66,280.77 218.82,249.31 230.98,217.86 243.13,192.08 255.29,173.01 267.44,161.17 279.60,153.95 291.76,153.49 303.91,159.32 316.07,154.19 328.23,166.08 340.38,175.73 352.54,189.76 364.70,195.11 376.85,205.81 389.01,220.07 401.17,230.53 413.32,241.58 425.48,252.43 437.63,262.29 449.79,266.85 461.95,275.62 474.10,284.39 486.26,292.37 498.42,299.92 510.57,307.77 522.73,311.04 ' style='stroke-width: 1.07; stroke: #7CAE00; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,469.56 72.94,452.60 85.10,432.96 97.25,415.00 109.41,400.59 121.57,386.54 133.72,373.54 145.88,354.77 158.04,334.36 170.19,309.42 182.35,279.24 194.51,242.97 206.66,207.88 218.82,179.43 230.98,153.38 243.13,140.12 255.29,140.07 267.44,140.47 279.60,146.33 291.76,154.09 303.91,167.13 316.07,179.48 328.23,194.43 340.38,207.73 352.54,213.69 364.70,227.40 376.85,240.16 389.01,252.13 401.17,262.91 413.32,275.56 425.48,277.53 437.63,286.52 449.79,297.19 461.95,281.26 474.10,286.31 486.26,297.20 498.42,302.52 510.57,307.94 522.73,315.99 ' style='stroke-width: 1.07; stroke: #00BE67; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,456.49 72.94,434.71 85.10,408.52 97.25,385.62 109.41,364.61 121.57,347.87 133.72,331.41 145.88,308.28 158.04,276.98 170.19,244.70 182.35,208.02 194.51,175.01 206.66,148.51 218.82,131.77 230.98,123.12 243.13,124.99 255.29,131.12 267.44,139.02 279.60,148.13 291.76,161.53 303.91,169.90 316.07,183.08 328.23,198.44 340.38,212.87 352.54,225.52 364.70,238.59 376.85,250.10 389.01,261.70 401.17,273.20 413.32,284.10 425.48,289.22 437.63,295.94 449.79,299.63 461.95,305.44 474.10,301.78 486.26,312.99 498.42,320.57 510.57,327.03 522.73,334.42 ' style='stroke-width: 1.07; stroke: #00BFC4; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,441.46 72.94,411.47 85.10,374.82 97.25,342.40 109.41,317.90 121.57,295.62 133.72,273.58 145.88,239.58 158.04,201.89 170.19,170.22 182.35,139.19 194.51,120.60 206.66,109.78 218.82,104.27 230.98,106.77 243.13,114.45 255.29,124.77 267.44,137.99 279.60,156.65 291.76,170.16 303.91,186.94 316.07,201.85 328.23,216.81 340.38,231.58 352.54,244.45 364.70,258.96 376.85,270.29 389.01,268.71 401.17,279.17 413.32,289.44 425.48,299.34 437.63,307.97 449.79,316.90 461.95,325.00 474.10,332.79 486.26,338.59 498.42,344.57 510.57,349.20 522.73,354.89 ' style='stroke-width: 1.07; stroke: #00A9FF; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,403.58 72.94,364.41 85.10,315.39 97.25,275.80 109.41,244.10 121.57,211.68 133.72,176.89 145.88,141.47 158.04,112.14 170.19,91.31 182.35,80.76 194.51,80.54 206.66,86.35 218.82,96.90 230.98,111.89 243.13,129.30 255.29,145.70 267.44,164.15 279.60,181.61 291.76,198.25 303.91,215.88 316.07,231.50 328.23,247.66 340.38,260.39 352.54,273.44 364.70,286.22 376.85,295.80 389.01,305.97 401.17,314.96 413.32,323.37 425.48,330.42 437.63,337.58 449.79,343.20 461.95,348.11 474.10,353.67 486.26,359.63 498.42,365.92 510.57,372.64 522.73,378.65 ' style='stroke-width: 1.07; stroke: #C77CFF; stroke-linecap: butt;' />[m
[31m-<polyline points='60.79,492.35 72.94,488.81 85.10,484.23 97.25,479.91 109.41,476.05 121.57,471.66 133.72,467.61 145.88,464.14 158.04,458.88 170.19,454.02 182.35,448.30 194.51,442.33 206.66,436.44 218.82,428.47 230.98,420.45 243.13,411.60 255.29,401.25 267.44,392.42 279.60,383.44 291.76,374.52 303.91,364.17 316.07,352.45 328.23,343.43 340.38,335.52 352.54,330.12 364.70,321.73 376.85,315.48 389.01,313.53 401.17,308.45 413.32,306.30 425.48,303.29 437.63,304.22 449.79,303.91 461.95,303.30 474.10,307.39 486.26,307.97 498.42,310.47 510.57,312.39 522.73,313.50 ' style='stroke-width: 1.07; stroke: #FF61CC; stroke-linecap: butt;' />[m
[31m-<polygon points='60.79,500.48 72.94,501.12 85.10,501.95 97.25,502.67 109.41,503.31 121.57,503.91 133.72,504.49 145.88,505.13 158.04,505.81 170.19,506.42 182.35,506.97 194.51,507.55 206.66,508.19 218.82,508.77 230.98,509.16 243.13,509.52 255.29,510.04 267.44,510.51 279.60,510.97 291.76,511.23 303.91,511.63 316.07,510.84 328.23,511.29 340.38,511.56 352.54,511.84 364.70,512.20 376.85,512.68 389.01,512.76 401.17,512.95 413.32,513.28 425.48,513.62 437.63,514.06 449.79,514.50 461.95,514.73 474.10,514.94 486.26,515.33 498.42,515.76 510.57,516.12 522.73,516.30 522.73,521.37 510.57,521.08 498.42,520.75 486.26,520.31 474.10,519.96 461.95,519.68 449.79,519.26 437.63,518.90 425.48,518.49 413.32,518.13 401.17,517.75 389.01,517.43 376.85,517.07 364.70,516.62 352.54,516.22 340.38,515.87 328.23,515.44 316.07,515.01 303.91,514.67 291.76,514.27 279.60,513.87 267.44,513.46 255.29,512.95 243.13,512.47 230.98,512.04 218.82,511.56 206.66,511.07 194.51,510.43 182.35,509.93 170.19,509.42 158.04,508.86 145.88,508.28 133.72,507.62 121.57,507.05 109.41,506.50 97.25,505.97 85.10,505.41 72.94,504.86 60.79,504.42 ' style='stroke-width: 0.00; stroke: none; stroke-linecap: butt; fill: #F8766D; fill-opacity: 0.20;' />[m
[31m-<polyline points='60.79,500.48 72.94,501.12 85.10,501.95 97.25,502.67 109.41,503.31 121.57,503.91 133.72,504.49 145.88,505.13 158.04,505.81 170.19,506.42 182.35,506.97 194.51,507.55 206.66,508.19 218.82,508.77 230.98,509.16 243.13,509.52 255.29,510.04 267.44,510.51 279.60,510.97 291.76,511.23 303.91,511.63 316.07,510.84 328.23,511.29 340.38,511.56 352.54,511.84 364.70,512.20 376.85,512.68 389.01,512.76 401.17,512.95 413.32,513.28 425.48,513.62 437.63,514.06 449.79,514.50 461.95,514.73 474.10,514.94 486.26,515.33 498.42,515.76 510.57,516.12 522.73,516.30 ' style='stroke-width: 1.07; stroke: none; stroke-linecap: butt;' />[m
[31m-<polyline points='522.73,521.37 510.57,521.08 498.42,520.75 486.26,520.31 474.10,519.96 461.95,519.68 449.79,519.26 437.63,518.90 425.48,518.49 413.32,518.13 401.17,517.75 389.01,517.43 376.85,517.07 364.70,516.62 352.54,516.22 340.38,515.87 328.23,515.44 316.07,515.01 303.91,514.67 291.76,514.27 279.60,513.87 267.44,513.46 255.29,512.95 243.13,512.47 230.98,512.04 218.82,511.56 206.66,511.07 194.51,510.43 182.35,509.93 170.19,509.42 158.04,508.86 145.88,508.28 133.72,507.62 121.57,507.05 109.41,506.50 97.25,505.97 85.10,505.41 72.94,504.86 60.79,504.42 ' style='stroke-width: 1.07; stroke: none; stroke-linecap: butt;' />[m
[31m-<polygon points='60.79,482.20 72.94,474.01 85.10,465.26 97.25,455.33 109.41,447.08 121.57,437.03 133.72,426.44 145.88,413.52 158.04,400.23 170.19,385.47 182.35,368.74 194.51,350.14 206.66,326.52 218.82,301.66 230.98,273.25 243.13,245.88 255.29,217.51 267.44,188.24 279.60,162.98 291.76,139.71 303.91,135.52 316.07,116.63 328.23,115.49 340.38,117.64 352.54,122.37 364.70,134.39 376.85,144.00 389.01,160.54 401.17,171.39 413.32,181.18 425.48,190.81 437.63,204.36 449.79,216.96 461.95,228.53 474.10,238.16 486.26,244.13 498.42,253.02 510.57,261.53 522.73,271.82 522.73,324.67 510.57,318.96 498.42,309.98 486.26,303.74 474.10,302.71 461.95,295.81 449.79,287.19 437.63,278.90 425.48,269.87 413.32,261.90 401.17,255.71 389.01,248.14 376.85,237.90 364.70,231.18 352.54,222.73 340.38,221.70 328.23,222.90 316.07,230.59 303.91,250.66 291.76,259.86 279.60,279.49 267.44,298.78 255.29,318.34 243.13,335.14 230.98,353.37 218.82,371.73 206.66,384.87 194.51,399.00 182.35,406.92 170.19,416.64 158.04,424.20 145.88,430.72 133.72,438.24 121.57,443.60 109.41,450.86 97.25,459.17 85.10,469.69 72.94,480.52 60.79,488.47 ' style='stroke-width: 0.00; stroke: none; stroke-linecap: butt; fill: #CD9600; fill-opacity: 0.20;' />[m
[31m-<polyline points='60.79,482.20 72.94,474.01 85.10,465.26 97.25,455.33 109.41,447.08 121.57,437.03 133.72,426.44 145.88,413.52 158.04,400.23 170.19,385.47 182.35,368.74 194.51,350.14 206.66,326.52 218.82,301.66 230.98,273.25 243.13,245.88 255.29,217.51 267.44,188.24 279.60,162.98 291.76,139.71 303.91,135.52 316.07,116.63 328.23,115.49 340.38,117.64 352.54,122.37 364.70,134.39 376.85,144.00 389.01,160.54 401.17,171.39 413.32,181.18 425.48,190.81 437.63,204.36 449.79,216.96 461.95,228.53 474.10,238.16 486.26,244.13 498.42,253.02 510.57,261.53 522.73,271.82 ' style='stroke-width: 1.07; stroke: none; stroke-linecap: butt;' />[m
[31m-<polyline points='522.73,324.67 510.57,318.96 498.42,309.98 486.26,303.74 474.10,302.71 461.95,295.81 449.79,287.19 437.63,278.90 425.48,269.87 413.32,261.90 401.17,255.71 389.01,248.14 376.85,237.90 364.70,231.18 352.54,222.73 340.38,221.70 328.23,222.90 316.07,230.59 303.91,250.66 291.76,259.86 279.60,279.49 267.44,298.78 255.29,318.34 243.13,335.14 230.98,353.37 218.82,371.73 206.66,384.87 194.51,399.00 182.35,406.92 170.19,416.64 158.04,424.20 145.88,430.72 133.72,438.24 121.57,443.60 109.41,450.86 97.25,459.17 85.10,469.69 72.94,480.52 60.79,488.47 ' style='stroke-width: 1.07; stroke: none; stroke-linecap: butt;' />[m
[31m-<polygon points='60.79,471.54 72.94,458.28 85.10,444.47 97.25,431.90 109.41,418.39 121.57,404.88 133.72,389.80 145.88,372.74 158.04,353.10 170.19,328.92 182.35,307.03 194.51,277.73 206.66,239.23 218.82,202.12 230.98,164.30 243.13,135.55 255.29,113.30 267.44,102.85 279.60,96.47 291.76,97.11 303.91,104.69 316.07,102.32 328.23,115.73 340.38,127.44 352.54,143.99 364.70,149.80 376.85,161.25 389.01,177.09 401.17,189.30 413.32,201.81 425.48,214.70 437.63,225.61 449.79,236.20 461.95,246.11 474.10,255.83 486.26,263.87 498.42,272.89 510.57,281.81 522.73,290.18 522.73,331.90 510.57,333.74 498.42,326.95 486.26,320.87 474.10,312.95 461.95,305.14 449.79,297.50 437.63,298.97 425.48,290.15 413.32,281.34 401.17,271.76 389.01,263.05 376.85,250.37 364.70,240.41 352.54,235.53 340.38,224.03 328.23,216.42 316.07,206.07 303.91,213.94 291.76,209.87 279.60,211.44 267.44,219.48 255.29,232.71 243.13,248.61 230.98,271.43 218.82,296.50 206.66,322.30 194.51,346.28 182.35,363.70 170.19,376.99 158.04,389.63 145.88,399.94 133.72,409.83 121.57,417.38 109.41,424.58 97.25,438.69 85.10,453.45 72.94,468.99 60.79,480.79 ' style='stroke-width: 0.00; stroke: none; stroke-linecap: butt; fill: #7CAE00; fill-opacity: 0.20;' />[m
[31m-<polyline points='60.79,471.54 72.94,458.28 85.10,444.47 97.25,431.90 109.41,418.39 121.57,404.88 133.72,389.80 145.88,372.74 158.04,353.10 170.19,328.92 182.35,307.03 194.51,277.73 206.66,239.23 218.82,202.12 230.98,164.30 243.13,135.55 255.29,113.30 267.44,102.85 279.60,96.47 291.76,97.11 303.91,104.69 316.07,102.32 328.23,115.73 340.38,127.44 352.54,143.99 364.70,149.80 376.85,161.25 389.01,177.0